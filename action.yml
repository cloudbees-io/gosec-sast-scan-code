apiVersion: automation.cloudbees.io/v1alpha1
kind: action
name: gosec
runs:
  using: composite
  steps:
    - id: run-orchestrator
      name: gosec
      uses: docker://public.ecr.aws/l7o7z1g8/actions/gosec-actions:main-fcf89c7108059591f15fb7f281e017a924b9da61 
      shell: bash
      env:
        RUN_ID: ${{ cloudbees.run_id }}
        JOB_ID: ${{ job.id }}
        STEP_ID: ${{step.internal.id}}
        DNS_URL: ${{ cloudbees.api.url }}
        JWT_TOKEN: ${{ cloudbees.api.token }}        
      run: |
        set -x
        echo "RUN ID: ${{ cloudbees.run_id }}"
        echo "Job ID: ${{ job.id }}"
        echo "Step ID: ${{step.internal.id}}"
        
        # fetch checkedout repo url and branch into assetIdentifier and profileIdentifier
        assetIdentifier=$(git config --get remote.origin.url)
        currentBranch=$(git branch | grep "*")
        profileIdentifier=${currentBranch:2}

        CONFIG_JSON='{\"port\":\"5002\",\"metaInfo\":{\"url\":\"NA\",\"username\":\"NA\",\"password\":\"NA\",\"client_secret\":\"NA\",\"toolName\":\"gosec\"},\"orchestratorInfo\":{\"assetType\":\"CODE\",\"assetIdentifier\":\"'
        CONFIG_JSON+=${assetIdentifier}
        CONFIG_JSON+='\",\"profileIdentifier\":\"'
        CONFIG_JSON+=${profileIdentifier}
        CONFIG_JSON+='\",\"language\":\"LANGUAGE_GO\"},\"metaInformation\":{\"actor\":\"SCM-Bot\",\"commit_id\":\"${{ cloudbees.scm.sha }}\",\"tenent_info\":\"NA\",\"scanner_type\":\"SAST\"}}'

        cd /
        /bin/bash -c "./executables/gosec & while ! nc -z localhost 5002; do sleep 1; done && ./executables/orchestrator -scanConfig \"${CONFIG_JSON}\" execute-analyser && exit"
